(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{k:()=>h});let t=!1;function n(e){let n=document.querySelector("h2").textContent,o=e.target.getAttribute("data-delete"),r=document.querySelector(".tasks"),l=function(e,t){return h[e].splice(t,1),localStorage.setItem("projects",JSON.stringify(h)),h[e]}(n,o);r.removeChild(r.lastChild),t=!0,document.querySelectorAll(".wrapper").forEach((e=>{e.parentNode.removeChild(e)})),c(l)}function o(e){if(0==t){let t;t="actualtaskdiv"==e.target.className?e.target:e.target.parentNode;let n=document.querySelectorAll(".descriptiondiv"),o=t.getAttribute("data-index");""==n[o].style.display||"none"==n[o].style.display?n[o].style.display="block":n[o].style.display="none"}else t=!1}function r(){let e=document.querySelector(".tasks");if(e.childNodes.length>0)for(;e.childNodes.length>0;)e.removeChild(e.firstChild)}function c(e){let t=document.querySelector(".tasks"),r=document.createElement("button"),c=document.createElement("div");c.className="buttondiv",r.textContent="AddTask",r.className="addtaskbutton";for(let r in e){let c=document.createElement("div"),l=document.createElement("div");c.className="wrapper";let a=document.createElement("div");a.className="actualtaskdiv",a.setAttribute("data-index",r);let d=document.createElement("button");d.className="btn-close",d.setAttribute("data-delete",`${r}`),a.addEventListener("click",o),d.addEventListener("click",n);for(let t in e[r])if("description"!=t){let n=document.createElement("div");n.className="divforeachelement",n.append(e[r][t]),a.append(n,d),c.append(a)}else l.className="descriptiondiv",l.innerHTML=`<span>Description: </span><p>${e[r][t]}</p>`;c.append(l),t.append(c)}r.addEventListener("click",d),c.append(r),t.append(c)}function l(e){document.querySelector(".todos").style.display=e}function a(e){document.querySelector(".addedtodo").style.display=e}function d(){a("none"),l("block")}function i(){document.querySelector("h2").textContent="Current",r(),c(h.Current),l("none"),a("flex")}function u(e,t){document.querySelector(".popupproject").textContent=`${t}`,document.querySelector(".popup").style.display=e}function s(){const e=document.querySelector(".burger"),t=document.querySelector(".actions"),n=document.querySelector(".addedproject");e.classList.toggle("toggle"),e.classList.toggle("burger-active"),t.classList.toggle("actions-active"),n.classList.toggle("addedproject-active")}function m(e,t){let n=document.createElement("div");n.textContent=`Please insert ${e}`,n.className="alert alert-danger",document.querySelector(`${t}`).after(n)}function p(){let e=document.querySelectorAll(".alert-danger");e.length>0&&e.forEach((e=>{e.parentNode.removeChild(e)}))}let y,f=document.querySelector(".addproject"),v=document.querySelector(".projects");function S(e){let t=document.querySelector(".projectdiv");t.parentNode.removeChild(t),f.style.display="block"}function g(){if(0==y){let e=document.querySelector("h2"),t=this.firstChild.textContent;e.textContent=t,l("none"),a("flex"),r(),c(h[t])}else y=!1}function E(){document.querySelectorAll(".addedproject").forEach((e=>{e.parentNode.removeChild(e)}));for(let e in h)if("Current"!=e){let t=document.createElement("div"),n=document.createElement("div"),o=document.createElement("button");t.innerHTML='<i class="fas fa-tasks"></i>',t.append(e),t.className="addedprojectleft",o.className="btn btn-close",o.setAttribute("data-delete",e),n.append(t,o),n.className="addedproject",v.insertBefore(n,f),n.addEventListener("click",g),o.addEventListener("click",b)}}function b(e){let t=e.target.getAttribute("data-delete");u("flex",t);let n=document.querySelector(".btnyes"),o=document.querySelector(".btnno"),r=document.querySelector(".popup__top .btn-close");n.addEventListener("click",q.bind(null,t)),r.addEventListener("click",(()=>{u("none")})),o.addEventListener("click",(function(){u("none")}))}function q(e){delete h[e],localStorage.setItem("projects",JSON.stringify(h)),y=!0,u("none"),E(),i()}function N(e){let t=document.getElementById("projectinput").value;(function(e){if(p(),!(e in h))return""!=e||(m("project","#projectinput"),!1);alert("Project already exists! Try different name!")})(t)&&(!function(e){h[e]=[],localStorage.setItem("projects",JSON.stringify(h)),r(),c(h[e])}(t),document.querySelector("h2").textContent=t,S(),E(),l("none"),a("flex"))}let h={Current:[]};if(document.querySelector(".addtaskform").addEventListener("submit",(function(e){e.preventDefault();let t=document.querySelector("#title"),n=document.querySelector("#description"),o=document.querySelector("#duedate"),d=document.querySelector("#priority"),i=document.querySelector("h2").textContent,u=function(e){let t=e.value;const n=dateFns.parse(t,"MM-dd-yyyy",new Date);return n<new Date?void alert("Invalid date! Task was already due!"):dateFns.distanceInWordsToNow(n,new Date)}(o),s=function(e,t,n,o){p();let r=0;return""==e.value&&(m("title","#title"),r+=1),""==t.value&&(m("description","#description"),r+=1),""==n.value&&(m("date","#duedate"),r+=1),"Select value"==o.value&&(m("priority","#priority"),r+=1),r}(t,n,o,d);0==s&&(function(e,t,n,o,r){let c=function(e,t,n,o){return{title:e,description:t,duedate:n,priority:o}}(e,t,n,o);h[r].push(c),localStorage.setItem("projects",JSON.stringify(h))}(t.value,n.value,u,d.value,i),t.value="",n.value="",o.value="",d.value="Select value",function(e){l("none"),a("flex"),r(),c(h[e])}(i))}),!1),document.querySelector(".addproject").addEventListener("click",(function(e){f.style.display="none";let t=document.createElement("div"),n=document.createElement("input");n.setAttribute("placeholder","Project name");let o=document.createElement("button");o.className="btnadd",o.textContent="Add";let r=document.createElement("button");r.className="btncancel",r.textContent="Cancel";let c=document.createElement("div");c.className="btndiv",c.append(o,r),n.setAttribute("type","text"),n.setAttribute("id","projectinput"),t.className="projectdiv",t.append(n,c),v.append(t),o.addEventListener("click",N),r.addEventListener("click",S)}),!1),document.querySelector(".current").addEventListener("click",i,!1),document.querySelector(".burger").addEventListener("click",(function(){const e=document.querySelector(".burger");document.querySelector(".actions"),e.addEventListener("click",s)}),!1),function(e){var t;try{t=window[e];var n="__storage_test__";return t.setItem(n,n),t.removeItem(n),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&t&&0!==t.length}}("localStorage"))if(localStorage.getItem("projects")){let e=localStorage.getItem("projects");h=JSON.parse(e),E(),c(h.Current)}else c()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,