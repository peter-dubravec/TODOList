(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{k:()=>b});let t=!1;function n(e){let n=document.querySelector("h2").textContent,o=e.target.getAttribute("data-delete"),r=document.querySelector(".tasks"),l=function(e,t){return b[e].splice(t,1),localStorage.setItem("projects",JSON.stringify(b)),b[e]}(n,o);r.removeChild(r.lastChild),t=!0,document.querySelectorAll(".wrapper").forEach((e=>{e.parentNode.removeChild(e)})),c(l)}function o(e){if(0==t){let t;console.log(e.target),t="actualtaskdiv"==e.target.className?e.target:e.target.parentNode;let n=document.querySelectorAll(".descriptiondiv"),o=t.getAttribute("data-index");console.log(o),""==n[o].style.display||"none"==n[o].style.display?n[o].style.display="block":n[o].style.display="none"}else t=!1}function r(){let e=document.querySelector(".tasks");if(e.childNodes.length>0)for(;e.childNodes.length>0;)e.removeChild(e.firstChild)}function c(e){let t=document.querySelector(".tasks"),r=document.createElement("button"),c=document.createElement("div");c.className="buttondiv",r.textContent="AddTask",r.className="addtaskbutton";for(let r in e){let c=document.createElement("div"),l=document.createElement("div");c.className="wrapper";let a=document.createElement("div");a.className="actualtaskdiv",a.setAttribute("data-index",r);let d=document.createElement("button");d.className="btn-close",d.setAttribute("data-delete",`${r}`),a.addEventListener("click",o),d.addEventListener("click",n);for(let t in e[r])if("description"!=t){let n=document.createElement("div");n.className="divforeachelement",n.append(e[r][t]),a.append(n,d),c.append(a)}else l.className="descriptiondiv",l.innerHTML="<span>Description: </span>"+e[r][t];c.append(l),t.append(c)}r.addEventListener("click",d),c.append(r),t.append(c)}function l(e){document.querySelector(".todos").style.display=e}function a(e){document.querySelector(".addedtodo").style.display=e}function d(){a("none"),l("block")}function i(){document.querySelector("h2").textContent="Current",r(),c(b.Current),l("none"),a("block")}function u(e,t){let n=document.createElement("div");n.textContent=`Please insert ${e}`,n.className="alert alert-danger",document.querySelector(`${t}`).after(n)}function s(){let e=document.querySelectorAll(".alert-danger");e.length>0&&e.forEach((e=>{e.parentNode.removeChild(e)}))}let m,p=document.querySelector(".addproject"),f=document.querySelector(".projects");function y(e){let t=document.querySelector(".projectdiv");t.parentNode.removeChild(t),p.style.display="block"}function v(){if(0==m){let e=document.querySelector("h2"),t=this.firstChild.textContent;e.textContent=t,l("none"),a("block"),r(),c(b[t])}else m=!1}function S(){document.querySelectorAll(".addedproject").forEach((e=>{e.parentNode.removeChild(e)}));for(let e in b)if("Current"!=e){let t=document.createElement("div"),n=document.createElement("div"),o=document.createElement("button");t.innerHTML='<i class="fas fa-tasks"></i>',t.append(e),t.className="addedprojectleft",o.className="btn btn-close",o.setAttribute("data-delete",e),n.append(t,o),n.className="addedproject",f.insertBefore(n,p),n.addEventListener("click",v),o.addEventListener("click",E)}}function E(e){let t=e.target.getAttribute("data-delete");delete b[t],localStorage.setItem("projects",JSON.stringify(b)),m=!0,S(),i()}function g(e){let t=document.getElementById("projectinput").value;(function(e){if(s(),!(e in b))return""!=e||(u("project","#projectinput"),!1);alert("Project already exists! Try different name!")})(t)&&(!function(e){b[e]=[],localStorage.setItem("projects",JSON.stringify(b)),r(),c(b[e])}(t),document.querySelector("h2").textContent=t,y(),S(),l("none"),a("block"))}let b={};if(document.querySelector(".addtaskform").addEventListener("submit",(function(e){e.preventDefault();let t=document.querySelector("#title"),n=document.querySelector("#description"),o=document.querySelector("#duedate"),d=document.querySelector("#priority"),i=document.querySelector("h2").textContent,m=function(e,t,n,o){s();let r=0;return""==e.value&&(u("title","#title"),r+=1),""==t.value&&(u("description","#description"),r+=1),""==n.value&&(u("date","#duedate"),r+=1),"Select value"==o.value&&(u("priority","#priority"),r+=1),r}(t,n,o,d);0==m&&(function(e,t,n,o,r){let c=function(e,t,n,o){return{title:e,description:t,duedate:n,priority:o}}(e,t,n,o);"Current"==r&&(b[r]=[]),console.log(b[r]),b[r].push(c),localStorage.setItem("projects",JSON.stringify(b))}(t.value,n.value,o.value,d.value,i),t.value="",n.value="",o.value="",d.value="Select value",function(e){l("none"),a("block"),r(),c(b[e])}(i))}),!1),document.querySelector(".addproject").addEventListener("click",(function(e){p.style.display="none";let t=document.createElement("div"),n=document.createElement("input");n.setAttribute("placeholder","Project name");let o=document.createElement("button");o.className="btnadd",o.textContent="Add";let r=document.createElement("button");r.className="btncancel",r.textContent="Cancel";let c=document.createElement("div");c.className="btndiv",c.append(o,r),n.setAttribute("type","text"),n.setAttribute("id","projectinput"),t.className="projectdiv",t.append(n,c),f.append(t),o.addEventListener("click",g),r.addEventListener("click",y)}),!1),document.querySelector(".current").addEventListener("click",i),function(e){var t;try{t=window[e];var n="__storage_test__";return t.setItem(n,n),t.removeItem(n),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&t&&0!==t.length}}("localStorage"))if(localStorage.getItem("projects")){let e=localStorage.getItem("projects");b=JSON.parse(e),S(),c(b.Current)}else c()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,