(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{k:()=>h});var t=!1;function n(e){var n=document.querySelector("h2").textContent,r=e.target.getAttribute("data-delete"),c=document.querySelector(".tasks"),a=function(e,t){return h[e].splice(t,1),localStorage.setItem("projects",JSON.stringify(h)),h[e]}(n,r);c.removeChild(c.lastChild),t=!0,document.querySelectorAll(".wrapper").forEach((function(e){e.parentNode.removeChild(e)})),o(a)}function r(e){if(0==t){var n;n="actualtaskdiv"==e.target.className?e.target:e.target.parentNode;var r=document.querySelectorAll(".descriptiondiv"),c=n.getAttribute("data-index");""==r[c].style.display||"none"==r[c].style.display?r[c].style.display="block":r[c].style.display="none"}else t=!1}function c(){var e=document.querySelector(".tasks");if(e.childNodes.length>0)for(;e.childNodes.length>0;)e.removeChild(e.firstChild)}function o(e){var t=document.querySelector(".tasks"),c=document.createElement("button"),o=document.createElement("div");for(var a in o.className="buttondiv",c.textContent="AddTask",c.className="addtaskbutton",e){var d=document.createElement("div"),i=document.createElement("div");d.className="wrapper";var u=document.createElement("div");u.className="actualtaskdiv",u.setAttribute("data-index",a);var s=document.createElement("button");for(var m in s.className="btn-close",s.setAttribute("data-delete","".concat(a)),u.addEventListener("click",r),s.addEventListener("click",n),e[a])if("description"!=m){var p=document.createElement("div");p.className="divforeachelement",p.append(e[a][m]),u.append(p,s),d.append(u)}else i.className="descriptiondiv",i.innerHTML="<span>Description: </span><p>".concat(e[a][m],"</p>");d.append(i),t.append(d)}c.addEventListener("click",l),o.append(c),t.append(o)}function a(e){document.querySelector(".todos").style.display=e}function d(e){document.querySelector(".addedtodo").style.display=e}function l(){d("none"),a("block")}function i(){document.querySelector("h2").textContent="Current",c(),o(h.Current),a("none"),d("flex")}function u(e,t){document.querySelector(".popupproject").textContent="".concat(t),document.querySelector(".popup").style.display=e}function s(){var e=document.querySelector(".burger"),t=document.querySelector(".actions"),n=document.querySelector(".projects");e.classList.toggle("toggle"),e.classList.toggle("burger-active"),t.classList.toggle("actions-active"),n.classList.toggle("project-active")}function m(e,t){var n=document.createElement("div");n.textContent="Please insert ".concat(e),n.className="alert alert-danger",document.querySelector("".concat(t)).after(n)}function p(){var e=document.querySelectorAll(".alert-danger");e.length>0&&e.forEach((function(e){e.parentNode.removeChild(e)}))}var v,f=document.querySelector(".addproject"),y=document.querySelector(".projects");function S(e){var t=document.querySelector(".projectdiv");t.parentNode.removeChild(t),f.style.display="block"}function g(){if(0==v){var e=document.querySelector("h2"),t=this.firstChild.textContent;e.textContent=t,a("none"),d("flex"),c(),o(h[t])}else v=!1}function E(){for(var e in document.querySelectorAll(".addedproject").forEach((function(e){e.parentNode.removeChild(e)})),h)if("Current"!=e){var t=document.createElement("div"),n=document.createElement("div"),r=document.createElement("button");t.innerHTML='<i class="fas fa-tasks"></i>',t.append(e),t.className="addedprojectleft",r.className="btn btn-close",r.setAttribute("data-delete",e),n.append(t,r),n.className="addedproject",y.insertBefore(n,f),n.addEventListener("click",g),r.addEventListener("click",b)}}function b(e){var t=e.target.getAttribute("data-delete");u("flex",t);var n=document.querySelector(".btnyes"),r=document.querySelector(".btnno"),c=document.querySelector(".popup__top .btn-close");n.addEventListener("click",q.bind(null,t)),c.addEventListener("click",(function(){u("none")})),r.addEventListener("click",(function(){u("none")}))}function q(e){delete h[e],localStorage.setItem("projects",JSON.stringify(h)),v=!0,u("none"),E(),i()}function N(e){var t=document.getElementById("projectinput").value;(function(e){if(p(),!(e in h))return""!=e||(m("project","#projectinput"),!1);alert("Project already exists! Try different name!")})(t)&&(!function(e){h[e]=[],localStorage.setItem("projects",JSON.stringify(h)),c(),o(h[e])}(t),document.querySelector("h2").textContent=t,S(),E(),a("none"),d("flex"))}var h={Current:[]};if(document.querySelector(".addtaskform").addEventListener("submit",(function(e){e.preventDefault();var t=document.querySelector("#title"),n=document.querySelector("#description"),r=document.querySelector("#duedate"),l=document.querySelector("#priority"),i=document.querySelector("h2").textContent,u=function(e){var t=e.value,n=dateFns.parse(t,"MM-dd-yyyy",new Date);if(!(n<new Date))return dateFns.distanceInWordsToNow(n,new Date);alert("Invalid date! Task was already due!")}(r),s=function(e,t,n,r){p();var c=0;return""==e.value&&(m("title","#title"),c+=1),""==t.value&&(m("description","#description"),c+=1),""==n.value&&(m("date","#duedate"),c+=1),"Select value"==r.value&&(m("priority","#priority"),c+=1),c}(t,n,r,l);0==s&&(function(e,t,n,r,c){var o=function(e,t,n,r){return{title:e,description:t,duedate:n,priority:r}}(e,t,n,r);h[c].push(o),localStorage.setItem("projects",JSON.stringify(h))}(t.value,n.value,u,l.value,i),t.value="",n.value="",r.value="",l.value="Select value",function(e){a("none"),d("flex"),c(),o(h[e])}(i))}),!1),document.querySelector(".addproject").addEventListener("click",(function(e){f.style.display="none";var t=document.createElement("div"),n=document.createElement("input");n.setAttribute("placeholder","Project name");var r=document.createElement("button");r.className="btnadd",r.textContent="Add";var c=document.createElement("button");c.className="btncancel",c.textContent="Cancel";var o=document.createElement("div");o.className="btndiv",o.append(r,c),n.setAttribute("type","text"),n.setAttribute("id","projectinput"),t.className="projectdiv",t.append(n,o),y.append(t),r.addEventListener("click",N),c.addEventListener("click",S)}),!1),document.querySelector(".current").addEventListener("click",i,!1),document.querySelector(".burger").addEventListener("click",(function(){document.querySelector(".burger").addEventListener("click",s)}),!1),function(e){var t;try{t=window[e];var n="__storage_test__";return t.setItem(n,n),t.removeItem(n),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&t&&0!==t.length}}("localStorage"))if(localStorage.getItem("projects")){var k=localStorage.getItem("projects");h=JSON.parse(k),E(),o(h.Current)}else o()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,